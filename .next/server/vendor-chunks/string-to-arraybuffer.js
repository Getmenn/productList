"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/string-to-arraybuffer";
exports.ids = ["vendor-chunks/string-to-arraybuffer"];
exports.modules = {

/***/ "(ssr)/./node_modules/string-to-arraybuffer/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/string-to-arraybuffer/index.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/**\r\n * @module  string-to-arraybuffer\r\n */\r\n\r\n\r\n\r\nvar atob = __webpack_require__(/*! atob-lite */ \"(ssr)/./node_modules/atob-lite/atob-node.js\")\r\nvar isBase64 = __webpack_require__(/*! is-base64 */ \"(ssr)/./node_modules/is-base64/is-base64.js\")\r\n\r\nmodule.exports = function stringToArrayBuffer (arg) {\r\n\tif (typeof arg !== 'string') throw Error('Argument should be a string')\r\n\r\n\t//valid data uri\r\n\tif (/^data\\:/i.test(arg)) return decode(arg)\r\n\r\n\t//base64\r\n\tif (isBase64(arg)) arg = atob(arg)\r\n\r\n\treturn str2ab(arg)\r\n}\r\n\r\nfunction str2ab (str) {\r\n\tvar array = new Uint8Array(str.length);\r\n\tfor(var i = 0; i < str.length; i++) {\r\n\t\tarray[i] = str.charCodeAt(i);\r\n\t}\r\n\treturn array.buffer\r\n}\r\n\r\nfunction decode(uri) {\r\n\t// strip newlines\r\n\turi = uri.replace(/\\r?\\n/g, '');\r\n\r\n\t// split the URI up into the \"metadata\" and the \"data\" portions\r\n\tvar firstComma = uri.indexOf(',');\r\n\tif (-1 === firstComma || firstComma <= 4) throw new TypeError('malformed data-URI');\r\n\r\n\t// remove the \"data:\" scheme and parse the metadata\r\n\tvar meta = uri.substring(5, firstComma).split(';');\r\n\r\n\tvar base64 = false;\r\n\tvar charset = 'US-ASCII';\r\n\tfor (var i = 0; i < meta.length; i++) {\r\n\t\tif ('base64' == meta[i]) {\r\n\t\t\tbase64 = true;\r\n\t\t} else if (0 == meta[i].indexOf('charset=')) {\r\n\t\t\tcharset = meta[i].substring(8);\r\n\t\t}\r\n\t}\r\n\r\n\t// get the encoded data portion and decode URI-encoded chars\r\n\tvar data = unescape(uri.substring(firstComma + 1));\r\n\r\n\tif (base64) data = atob(data)\r\n\r\n\tvar abuf = str2ab(data)\r\n\r\n\tabuf.type = meta[0] || 'text/plain'\r\n\tabuf.charset = charset\r\n\r\n\treturn abuf\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc3RyaW5nLXRvLWFycmF5YnVmZmVyL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ1k7QUFDWjtBQUNBLFdBQVcsbUJBQU8sQ0FBQyw4REFBVztBQUM5QixlQUFlLG1CQUFPLENBQUMsOERBQVc7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLGdCQUFnQjtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaURBQWlEO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixpQkFBaUI7QUFDbEM7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Zyb250Ly4vbm9kZV9tb2R1bGVzL3N0cmluZy10by1hcnJheWJ1ZmZlci9pbmRleC5qcz80OGIxIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBAbW9kdWxlICBzdHJpbmctdG8tYXJyYXlidWZmZXJcclxuICovXHJcblxyXG4ndXNlIHN0cmljdCdcclxuXHJcbnZhciBhdG9iID0gcmVxdWlyZSgnYXRvYi1saXRlJylcclxudmFyIGlzQmFzZTY0ID0gcmVxdWlyZSgnaXMtYmFzZTY0JylcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gc3RyaW5nVG9BcnJheUJ1ZmZlciAoYXJnKSB7XHJcblx0aWYgKHR5cGVvZiBhcmcgIT09ICdzdHJpbmcnKSB0aHJvdyBFcnJvcignQXJndW1lbnQgc2hvdWxkIGJlIGEgc3RyaW5nJylcclxuXHJcblx0Ly92YWxpZCBkYXRhIHVyaVxyXG5cdGlmICgvXmRhdGFcXDovaS50ZXN0KGFyZykpIHJldHVybiBkZWNvZGUoYXJnKVxyXG5cclxuXHQvL2Jhc2U2NFxyXG5cdGlmIChpc0Jhc2U2NChhcmcpKSBhcmcgPSBhdG9iKGFyZylcclxuXHJcblx0cmV0dXJuIHN0cjJhYihhcmcpXHJcbn1cclxuXHJcbmZ1bmN0aW9uIHN0cjJhYiAoc3RyKSB7XHJcblx0dmFyIGFycmF5ID0gbmV3IFVpbnQ4QXJyYXkoc3RyLmxlbmd0aCk7XHJcblx0Zm9yKHZhciBpID0gMDsgaSA8IHN0ci5sZW5ndGg7IGkrKykge1xyXG5cdFx0YXJyYXlbaV0gPSBzdHIuY2hhckNvZGVBdChpKTtcclxuXHR9XHJcblx0cmV0dXJuIGFycmF5LmJ1ZmZlclxyXG59XHJcblxyXG5mdW5jdGlvbiBkZWNvZGUodXJpKSB7XHJcblx0Ly8gc3RyaXAgbmV3bGluZXNcclxuXHR1cmkgPSB1cmkucmVwbGFjZSgvXFxyP1xcbi9nLCAnJyk7XHJcblxyXG5cdC8vIHNwbGl0IHRoZSBVUkkgdXAgaW50byB0aGUgXCJtZXRhZGF0YVwiIGFuZCB0aGUgXCJkYXRhXCIgcG9ydGlvbnNcclxuXHR2YXIgZmlyc3RDb21tYSA9IHVyaS5pbmRleE9mKCcsJyk7XHJcblx0aWYgKC0xID09PSBmaXJzdENvbW1hIHx8IGZpcnN0Q29tbWEgPD0gNCkgdGhyb3cgbmV3IFR5cGVFcnJvcignbWFsZm9ybWVkIGRhdGEtVVJJJyk7XHJcblxyXG5cdC8vIHJlbW92ZSB0aGUgXCJkYXRhOlwiIHNjaGVtZSBhbmQgcGFyc2UgdGhlIG1ldGFkYXRhXHJcblx0dmFyIG1ldGEgPSB1cmkuc3Vic3RyaW5nKDUsIGZpcnN0Q29tbWEpLnNwbGl0KCc7Jyk7XHJcblxyXG5cdHZhciBiYXNlNjQgPSBmYWxzZTtcclxuXHR2YXIgY2hhcnNldCA9ICdVUy1BU0NJSSc7XHJcblx0Zm9yICh2YXIgaSA9IDA7IGkgPCBtZXRhLmxlbmd0aDsgaSsrKSB7XHJcblx0XHRpZiAoJ2Jhc2U2NCcgPT0gbWV0YVtpXSkge1xyXG5cdFx0XHRiYXNlNjQgPSB0cnVlO1xyXG5cdFx0fSBlbHNlIGlmICgwID09IG1ldGFbaV0uaW5kZXhPZignY2hhcnNldD0nKSkge1xyXG5cdFx0XHRjaGFyc2V0ID0gbWV0YVtpXS5zdWJzdHJpbmcoOCk7XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHQvLyBnZXQgdGhlIGVuY29kZWQgZGF0YSBwb3J0aW9uIGFuZCBkZWNvZGUgVVJJLWVuY29kZWQgY2hhcnNcclxuXHR2YXIgZGF0YSA9IHVuZXNjYXBlKHVyaS5zdWJzdHJpbmcoZmlyc3RDb21tYSArIDEpKTtcclxuXHJcblx0aWYgKGJhc2U2NCkgZGF0YSA9IGF0b2IoZGF0YSlcclxuXHJcblx0dmFyIGFidWYgPSBzdHIyYWIoZGF0YSlcclxuXHJcblx0YWJ1Zi50eXBlID0gbWV0YVswXSB8fCAndGV4dC9wbGFpbidcclxuXHRhYnVmLmNoYXJzZXQgPSBjaGFyc2V0XHJcblxyXG5cdHJldHVybiBhYnVmXHJcbn1cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/string-to-arraybuffer/index.js\n");

/***/ })

};
;